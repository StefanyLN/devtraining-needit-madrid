<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>asmt_assessment_instance</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="asmt_assessment_instance">stateCHANGESTOcomplete^EQ<item display_value="Complete" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="complete"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Informações dos campos na work order</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

    var question = new GlideRecord('asmt_assessment_instance_question');
    question.addQuery('instance', current.getUniqueValue());
    question.addEncodedQuery('metricLIKEquestion_causa^ORmetricLIKEquestion_fato^ORmetricLIKEquestion_acao');
	question.query();
	
	var causa = '';
	var acao = '';
	var fato = '';
	
	while(question.next()){
		var metric = question.getDisplayValue('metric');
		
		if(metric == 'question_acao'){
			acao = question.getDisplayValue('string_value');
		} else if(metric == 'question_fato'){
			fato = question.getDisplayValue('string_value');
		} else if(metric == 'question_causa'){
			causa = question.getDisplayValue('string_value');
		}
	}	
	
	var msg = 'Informações sobre o encerramento do questionário: \n\n';
	var work_notes = msg + 'Causa: ' + causa + '\n' + 'Fato: ' + fato + '\n' + 'Ação: ' + acao;
		
	var wmOrder = new GlideRecord('wm_order');
	wmOrder.get(current.getValue('trigger_id'));
	
	wmOrder.work_notes = work_notes;
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2019-09-24 13:07:18</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>2f3d1c92db00001002fba08a48961984</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Informações dos campos na work order</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_2f3d1c92db00001002fba08a48961984</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-09-24 13:07:18</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=2f3d1c92db00001002fba08a48961984"/>
</record_update>
